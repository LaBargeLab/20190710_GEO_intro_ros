# Clear Workspace
rm(list = ls())
setwd('/Users/rosalyn/Desktop/Marion')

#####################################################################
########## LOAD LIBRARIES ##########
#####################################################################

if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install()

BiocManager::install("GEOquery")
BiocManager::install("affycoretools")
BiocManager::install("pd.hta.2.0")
install.packages("reshape2")
# BiocManager::install("GEOmetadb")



# https://www.ncbi.nlm.nih.gov/sites/GDSbrowser/
# https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE102088

library(GEOmetadb) # https://www.bioconductor.org/packages/release/bioc/vignettes/GEOmetadb/inst/doc/GEOmetadb.html
library(pd.hta.2.0)
library(affycoretools) # https://bioconductor.org/packages/release/bioc/vignettes/affycoretools/inst/doc/RefactoredAffycoretools.htmln
library(reshape2)

sessionInfo()

#####################################################################
########## LOAD DATA ##########
#####################################################################

library(GEOquery) # https://bioconductor.org/packages/release/bioc/vignettes/GEOquery/inst/doc/GEOquery.html

gse <- getGEO("GSE102088")




#####################################################################
########## LOAD DATA ##########
#####################################################################

# https://www.ncbi.nlm.nih.gov/sites/GDSbrowser/
# https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE102088
gse <- getGEO("GSE102088")

gse
# $GSE102088_series_matrix.txt.gz
# ExpressionSet (storageMode: lockedEnvironment)
# assayData: 70523 features, 114 samples 
# element names: exprs 
# protocolData: none
# phenoData
# sampleNames: GSM2723637 GSM2723638 ... GSM2723750 (114 total)
# varLabels: title geo_accession ... race:ch1 (37 total)
# varMetadata: labelDescription
# featureData
# featureNames: 2824546_st 2824549_st ... TCUn_gl000247000001.hg.1 (70523 total)
# fvarLabels: ID probeset_id ... SPOT_ID (15 total)
# fvarMetadata: Column Description labelDescription
# experimentData: use 'experimentData(object)'
# Annotation: GPL17586 
class(gse)
length(gse)

gse <- gse[[1]]
class(gse)
gse

str(gse)
dim(gse)


#####################################################################
########## PHENO DATA ##########
#####################################################################

phenoData(gse)
# An object of class 'AnnotatedDataFrame'
# sampleNames: GSM2723637 GSM2723638 ... GSM2723750 (114 total)
# varLabels: title geo_accession ... race:ch1 (37 total)
# varMetadata: labelDescription

sampleNames(gse)
varLabels(gse)
varMetadata(gse)

head(pData(gse))
str(pData(gse))
# table(pData(gse)$platform_id)

colnames(pData(gse))
sampleData <- pData(gse)[, c("age:ch1", "bmi:ch1", "race:ch1")]
colnames(sampleData) <- c("Age", "BMI", "Race")

sampleData$Age <- as.numeric(as.character(sampleData$Age))
sampleData$BMI <- as.numeric(as.character(sampleData$BMI))

# continuous
hist(sampleData$Age)
hist(sampleData$BMI)

# categorical/discrete
table(sampleData$Race)

which(is.na(sampleData$Age) == TRUE)
# sampleData$Age[!is.na(sampleData$Age)]


!is.na(c(2, NA, 3))

sampleData$AgeGroup <- NA
sampleData[sampleData$Age <= 30, ]$AgeGroup <- "Young"
sampleData[sampleData$Age > 30 & sampleData$Age < 55, ]$AgeGroup <- "Middle-Age"
sampleData[sampleData$Age >= 55, ]$AgeGroup <- "Old"
table(sampleData$AgeGroup)


#####################################################################
########## FEATURE DATA ##########
#####################################################################

featureData(gse)
# An object of class 'AnnotatedDataFrame'
# featureNames: 2824546_st 2824549_st ... TCUn_gl000247000001.hg.1 (70523 total)
# varLabels: ID probeset_id ... SPOT_ID (15 total)
# varMetadata: Column Description labelDescription
class(featureData(gse))

varLabels(gse)
featureNames(gse)
varMetadata(gse)

head(fData(gse))
tail(fData(gse))
class(fData(gse))

probeData <- fData(gse)
head(probeData)
table(probeData$gene_assignment)


#####################################################################
########## Annotation ##########
#####################################################################

Annotation(gse)
gpl.annot <- getGEO("GPL17586", AnnotGPL=TRUE)
gpl.annot

# if(!file.exists('GEOmetadb.sqlite')) getSQLiteFile()
# file.info('GEOmetadb.sqlite')
# con <- dbConnect(SQLite(),'GEOmetadb.sqlite')
# dbGetQuery(con,"select gpl, title, bioc_package from gpl where gpl='GPL17586'")
# # gpl                                                                                title bioc_package
# # 1 GPL17586 [HTA-2_0] - Affymetrix GeneChip HTA-2_0 - Gene Level - HTA-2_0.r1.Psrs.mps probesets         <NA>
# dbDisconnect(con)

# https://bioconductor.org/packages/release/BiocViews.html#___AnnotationData
pd.hta.2.0
gse <- annotateEset(gse, pd.hta.2.0)
probeData.annot <- fData(gse)
head(probeData.annot)
tail(probeData.annot)



#####################################################################
########## Expression Data ##########
#####################################################################

exprData <- exprs(gse)
class(exprData)

head(exprData)

str(exprData)
max(exprData)
min(exprData)
quartz()
boxplot(exprData)

exprData <- as.data.frame(exprData)
exprData$PROBEID <- probeData.annot$PROBEID
exprData$ID <- probeData.annot$ID
exprData$SYMBOL <- probeData.annot$SYMBOL
exprData$GENENAME <- probeData.annot$GENENAME



#####################################################################
########## EXPRESSION DATA: GENE LEVEL ##########
#####################################################################

dim(exprData)
# Remove probes with no associated gene symbols 
exprData.filt <- exprData[!is.na(exprData$SYMBOL), ]
dim(exprData.filt)
head(exprData.filt)

length(unique(exprData.filt$PROBEID))
length(unique(exprData.filt$ID))
length(unique(exprData.filt$SYMBOL))

# Calculate mean gene level data by ID?
# Calculate mean gene level data by SYMBOL?
# Take max gene level data by SYMBOL?

exprData.geneLevel <- exprData.filt %>% group_by(ID.SYMBOL) %>% summarise_if(is.numeric, funs(max(., na.rm = TRUE)))
head(exprData.geneLevel)
exprData.geneLevel <- as.data.frame(exprData.geneLevel)
rownames(exprData.geneLevel) <- exprData.geneLevel$SYMBOL
exprData.geneLevel <- exprData.geneLevel[, -1]
dim(exprData.geneLevel)


#####################################################################
########## GENE LEVEL CENTER SCALE ##########
#####################################################################

########### Center FUNCTION
mean.center.rows <- function(x){
  return(t(apply(x, 1, function(x) (x - mean(na.omit(x))))))
}
median.center.rows <- function(x){
  return(t(apply(x, 1, function(x) (x - median(na.omit(x))))))
}
########### Center Scale FUNCTION
mean.center.scale.rows <- function(x){
  return(t(apply(x, 1, function(x) (x - mean(na.omit(x)))/sd(na.omit(x)))))
}
median.center.scale.rows <- function(x){
  return(t(apply(x, 1, function(x) (x - median(na.omit(x)))/sd(na.omit(x)))))
}


exprData.geneLevel.MnCtrScl <- mean.center.scale.rows(exprData.geneLevel)


#####################################################################
########## EXTRACT GENE SETS ##########
#####################################################################

exprData.geneLevel.MnCtrScl["ESR1",]
exprData.geneLevel.MnCtrScl[c("ESR1", "PGR"),]


#####################################################################
########## EXTRACT & PLOT GENE SETS  ##########
#####################################################################

ggplotData <- exprData.geneLevel.MnCtrScl[c("ESR1", "PGR"),]
ggplotData.melt <- melt(ggplotData)
colnames(ggplotData.melt) <- c("GeneSymbol", "SampleID", "log2Expr")

head(sampleData)
ggplotData.melt <- cbind.data.frame(ggplotData.melt,
                                    sampleData[ggplotData.melt$SampleID, ])
head(ggplotData.melt)
rownames(ggplotData.melt) <- NULL

ggplot(ggplotData.melt, aes(x=AgeGroup, y=log2Expr)) +
  geom_boxplot(aes(fill=AgeGroup)) +
  facet_wrap(~GeneSymbol)

ggplotData.melt$AgeGroup <- factor(ggplotData.melt$AgeGroup, levels=c("Young", "Middle-Age", "Old"))

ggplot(ggplotData.melt, aes(x=AgeGroup, y=log2Expr)) +
  geom_boxplot(aes(fill=AgeGroup)) +
  facet_wrap(~GeneSymbol)


#####################################################################
########## PCA ##########
#####################################################################

pcaData <- t(exprData.geneLevel.MnCtrScl)
res.pca <- prcomp(pcaData, center=F, scale=F)
pca.groups.AgeGroup <- sampleData$AgeGroup

# The variance retained by each principal component can be obtained as follow :
# Eigenvalues
eig <- (res.pca$sdev)^2
# Variances in percentage
variance <- eig*100/sum(eig)
# Cumulative variances
cumvar <- cumsum(variance)
eig.pca.expr <- data.frame(eig = eig, variance = variance,
                           cumvariance = cumvar)
head(eig.pca.expr)
# Use factoextra package to get eigen values
eig.val <- get_eigenvalue(res.pca)

str(res.pca)
head(res.pca$x)
ggplotData <- as.data.frame(res.pca$x)
ggplotData$AgeGroup <- sampleData$AgeGroup
ggplotData$AgeGroup <- factor(ggplotData$AgeGroup, levels=c("Young", "Middle-Age", "Old"))

ggplot(ggplotData, aes(PC1, PC2)) + 
  geom_point(aes(color=AgeGroup, shape=AgeGroup), size=3)


#####################################################################
########## HEATMAP  ##########
#####################################################################

heatmap.2(heatmapData.met, 
          dendrogram="both", Rowv=T, Colv=T,
          col=colorRampPalette(c("blue", "black", "yellow"))(100), scale="none", margins=c(1,1),
          labRow="", labCol="", 
          symbreaks=FALSE, key=TRUE, symkey=FALSE, keysize=1.75, key.title = "", key.xlab = "log2 Expression",
          density.info="none", trace="none",
          ColSideColors=ColSideColors.CellType.SubjectAge,
          hclust=function(x) hclust(x,method="ward.D2"),
          distfun=function(x) dist(x,method="euclidean"))


###############################################################################
########## RETAIN & REMOVE ##########
###############################################################################
retain.ls <- c(probeData, sampleData)

remove.ls = ls()
rm(list=setdiff(remove.ls, retain.ls))
ls()



###############################################################################
########## SAVE WORKSPACE ##########
###############################################################################

# Workspace file name:
workspace.fileName = 'MORAG_0_v14_LoadData_Annotation_GeneLevel_MdCtr_20180307'
save.image(file.path(getwd(), paste(workspace.fileName,'.RData', sep = "")))


###############################################################################
########## SESSION INFO ##########
###############################################################################

sessionInfo()
# R version 3.4.2 (2017-09-28)
# Platform: x86_64-apple-darwin15.6.0 (64-bit)
# Running under: macOS Sierra 10.12.6
# 
# Matrix products: default
# BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
# LAPACK: /Library/Frameworks/R.framework/Versions/3.4/Resources/lib/libRlapack.dylib
# 
# locale:
#   [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
# 
# attached base packages:
#   [1] grid      parallel  stats4    stats     graphics  grDevices utils     datasets  methods   base     
# 
# other attached packages:
#   [1] genefu_2.8.0                         AIMS_1.8.0                           e1071_1.6-8                         
# [4] iC10_1.1.3                           iC10TrainingData_1.0.1               pamr_1.55                           
# [7] cluster_2.0.6                        biomaRt_2.32.1                       limma_3.32.10                       
# [10] mclust_5.4                           survcomp_1.26.0                      prodlim_1.6.1                       
# [13] hugene10sttranscriptcluster.db_8.6.0 GEOmetadb_1.36.0                     RSQLite_2.0                         
# [16] openxlsx_4.0.17                      GEOquery_2.42.0                      broom_0.4.3                         
# [19] survminer_0.4.1                      survival_2.41-3                      gtable_0.2.0                        
# [22] ConsensusClusterPlus_1.40.0          gplots_3.0.1                         org.Hs.eg.db_3.4.1                  
# [25] AnnotationDbi_1.38.2                 rlist_0.4.6.1                        reshape2_1.4.3                      
# [28] bindrcpp_0.2                         ggpubr_0.1.6                         RColorBrewer_1.1-2                  
# [31] viridis_0.4.1                        viridisLite_0.2.0                    forcats_0.3.0                       
# [34] stringr_1.2.0                        dplyr_0.7.4                          purrr_0.2.4                         
# [37] readr_1.1.1                          tidyr_0.7.2                          tibble_1.4.2                        
# [40] tidyverse_1.2.1                      visreg_2.5-0                         magrittr_1.5                        
# [43] cowplot_0.9.2                        factoextra_1.0.5                     devtools_1.13.4                     
# [46] FactoMineR_1.39                      squash_1.0.8                         dendextend_1.6.0                    
# [49] pvclust_2.0-0                        gridExtra_2.3                        hexbin_1.27.2                       
# [52] vsn_3.44.0                           ggrepel_0.7.0                        ggplot2_2.2.1                       
# [55] DESeq2_1.16.1                        SummarizedExperiment_1.6.5           DelayedArray_0.2.7                  
# [58] matrixStats_0.53.0                   Biobase_2.36.2                       GenomicRanges_1.28.6                
# [61] GenomeInfoDb_1.12.3                  IRanges_2.10.5                       S4Vectors_0.14.7                    
# [64] BiocGenerics_0.22.1                 
# 
# loaded via a namespace (and not attached):
#   [1] utf8_1.1.3              htmlwidgets_1.0         trimcluster_0.1-2       BiocParallel_1.10.1     munsell_0.4.3           preprocessCore_1.38.1  
# [7] withr_2.1.1             colorspace_1.3-2        BiocInstaller_1.26.1    knitr_1.19              rstudioapi_0.7          leaps_3.0              
# [13] robustbase_0.92-8       labeling_0.3            GenomeInfoDbData_0.99.0 mnormt_1.5-5            KMsurv_0.1-5            bit64_0.9-7            
# [19] diptest_0.75-7          R6_2.2.2                locfit_1.5-9.1          flexmix_2.3-14          bitops_1.0-6            assertthat_0.2.0       
# [25] scales_0.5.0.9000       nnet_7.3-12             affy_1.54.0             rlang_0.1.6             genefilter_1.58.1       cmprsk_2.2-7           
# [31] scatterplot3d_0.3-40    eulerr_4.0.0            splines_3.4.2           lazyeval_0.2.1          acepack_1.4.1           checkmate_1.8.5        
# [37] yaml_2.1.16             modelr_0.1.1            backports_1.1.2         Hmisc_4.1-1             tools_3.4.2             lava_1.6               
# [43] psych_1.7.8             affyio_1.46.0           Rcpp_0.12.15            plyr_1.8.4              base64enc_0.1-3         zlibbioc_1.22.0        
# [49] RCurl_1.95-4.10         rpart_4.1-12            zoo_1.8-1               haven_1.1.1             data.table_1.10.4-3     mvtnorm_1.0-7          
# [55] amap_0.8-14             whisker_0.3-2           hms_0.4.1               xtable_1.8-2            XML_3.98-1.9            readxl_1.0.0           
# [61] compiler_3.4.2          KernSmooth_2.23-15      crayon_1.3.4            htmltools_0.3.6         Formula_1.2-2           geneplotter_1.54.0     
# [67] lubridate_1.7.1         DBI_0.7                 SuppDists_1.1-9.4       MASS_7.3-48             fpc_2.1-11              Matrix_1.2-12          
# [73] rmeta_2.16              cli_1.0.0               gdata_2.18.0            bindr_0.1               pkgconfig_2.0.1         km.ci_0.5-2            
# [79] flashClust_1.01-2       foreign_0.8-69          xml2_1.2.0              annotate_1.54.0         XVector_0.16.0          rvest_0.3.2            
# [85] digest_0.6.14           cellranger_1.1.0        survMisc_0.5.4          htmlTable_1.11.2        curl_3.1                kernlab_0.9-25         
# [91] gtools_3.5.0            modeltools_0.2-21       nlme_3.1-131            jsonlite_1.5            survivalROC_1.0.3       pillar_1.1.0           
# [97] lattice_0.20-35         httr_1.3.1              DEoptimR_1.0-8          glue_1.2.0              prabclus_2.2-6          bit_1.1-12             
# [103] class_7.3-14            stringi_1.1.6           bootstrap_2017.2        blob_1.1.0              latticeExtra_0.6-28     caTools_1.17.1         
# [109] memoise_1.1.0         
